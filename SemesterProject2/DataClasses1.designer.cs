#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SemesterProject2
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="C#_Project")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertStore(Store instance);
    partial void UpdateStore(Store instance);
    partial void DeleteStore(Store instance);
    partial void InsertAccountPurchase1(AccountPurchase1 instance);
    partial void UpdateAccountPurchase1(AccountPurchase1 instance);
    partial void DeleteAccountPurchase1(AccountPurchase1 instance);
    partial void InsertCustomer1(Customer1 instance);
    partial void UpdateCustomer1(Customer1 instance);
    partial void DeleteCustomer1(Customer1 instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::SemesterProject2.Properties.Settings.Default.C__ProjectConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Store> Stores
		{
			get
			{
				return this.GetTable<Store>();
			}
		}
		
		public System.Data.Linq.Table<AccountPurchase1> AccountPurchase1s
		{
			get
			{
				return this.GetTable<AccountPurchase1>();
			}
		}
		
		public System.Data.Linq.Table<Customer1> Customer1s
		{
			get
			{
				return this.GetTable<Customer1>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Store")]
	public partial class Store : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _productID;
		
		private decimal _productPrice;
		
		private System.Nullable<int> _productQuantity;
		
		private string _prodDescription;
		
		private EntitySet<AccountPurchase1> _AccountPurchase1s;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnproductIDChanging(int value);
    partial void OnproductIDChanged();
    partial void OnproductPriceChanging(decimal value);
    partial void OnproductPriceChanged();
    partial void OnproductQuantityChanging(System.Nullable<int> value);
    partial void OnproductQuantityChanged();
    partial void OnprodDescriptionChanging(string value);
    partial void OnprodDescriptionChanged();
    #endregion
		
		public Store()
		{
			this._AccountPurchase1s = new EntitySet<AccountPurchase1>(new Action<AccountPurchase1>(this.attach_AccountPurchase1s), new Action<AccountPurchase1>(this.detach_AccountPurchase1s));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_productID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int productID
		{
			get
			{
				return this._productID;
			}
			set
			{
				if ((this._productID != value))
				{
					this.OnproductIDChanging(value);
					this.SendPropertyChanging();
					this._productID = value;
					this.SendPropertyChanged("productID");
					this.OnproductIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_productPrice", DbType="Decimal(5,2) NOT NULL")]
		public decimal productPrice
		{
			get
			{
				return this._productPrice;
			}
			set
			{
				if ((this._productPrice != value))
				{
					this.OnproductPriceChanging(value);
					this.SendPropertyChanging();
					this._productPrice = value;
					this.SendPropertyChanged("productPrice");
					this.OnproductPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_productQuantity", DbType="Int")]
		public System.Nullable<int> productQuantity
		{
			get
			{
				return this._productQuantity;
			}
			set
			{
				if ((this._productQuantity != value))
				{
					this.OnproductQuantityChanging(value);
					this.SendPropertyChanging();
					this._productQuantity = value;
					this.SendPropertyChanged("productQuantity");
					this.OnproductQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_prodDescription", DbType="VarChar(45) NOT NULL", CanBeNull=false)]
		public string prodDescription
		{
			get
			{
				return this._prodDescription;
			}
			set
			{
				if ((this._prodDescription != value))
				{
					this.OnprodDescriptionChanging(value);
					this.SendPropertyChanging();
					this._prodDescription = value;
					this.SendPropertyChanged("prodDescription");
					this.OnprodDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Store_AccountPurchase1", Storage="_AccountPurchase1s", ThisKey="productID", OtherKey="productID")]
		public EntitySet<AccountPurchase1> AccountPurchase1s
		{
			get
			{
				return this._AccountPurchase1s;
			}
			set
			{
				this._AccountPurchase1s.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AccountPurchase1s(AccountPurchase1 entity)
		{
			this.SendPropertyChanging();
			entity.Store = this;
		}
		
		private void detach_AccountPurchase1s(AccountPurchase1 entity)
		{
			this.SendPropertyChanging();
			entity.Store = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AccountPurchases")]
	public partial class AccountPurchase1 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _customerID;
		
		private int _productID;
		
		private int _quantity;
		
		private System.Nullable<decimal> _totalCost;
		
		private System.DateTime _purchaseDate;
		
		private int _purchaseId;
		
		private string _prodDescription;
		
		private EntityRef<Store> _Store;
		
		private EntityRef<Customer1> _Customer1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OncustomerIDChanging(int value);
    partial void OncustomerIDChanged();
    partial void OnproductIDChanging(int value);
    partial void OnproductIDChanged();
    partial void OnquantityChanging(int value);
    partial void OnquantityChanged();
    partial void OntotalCostChanging(System.Nullable<decimal> value);
    partial void OntotalCostChanged();
    partial void OnpurchaseDateChanging(System.DateTime value);
    partial void OnpurchaseDateChanged();
    partial void OnpurchaseIdChanging(int value);
    partial void OnpurchaseIdChanged();
    partial void OnprodDescriptionChanging(string value);
    partial void OnprodDescriptionChanged();
    #endregion
		
		public AccountPurchase1()
		{
			this._Store = default(EntityRef<Store>);
			this._Customer1 = default(EntityRef<Customer1>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customerID", DbType="Int NOT NULL")]
		public int customerID
		{
			get
			{
				return this._customerID;
			}
			set
			{
				if ((this._customerID != value))
				{
					if (this._Customer1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncustomerIDChanging(value);
					this.SendPropertyChanging();
					this._customerID = value;
					this.SendPropertyChanged("customerID");
					this.OncustomerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_productID", DbType="Int NOT NULL")]
		public int productID
		{
			get
			{
				return this._productID;
			}
			set
			{
				if ((this._productID != value))
				{
					if (this._Store.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnproductIDChanging(value);
					this.SendPropertyChanging();
					this._productID = value;
					this.SendPropertyChanged("productID");
					this.OnproductIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_quantity", DbType="Int NOT NULL")]
		public int quantity
		{
			get
			{
				return this._quantity;
			}
			set
			{
				if ((this._quantity != value))
				{
					this.OnquantityChanging(value);
					this.SendPropertyChanging();
					this._quantity = value;
					this.SendPropertyChanged("quantity");
					this.OnquantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_totalCost", DbType="Decimal(5,2)")]
		public System.Nullable<decimal> totalCost
		{
			get
			{
				return this._totalCost;
			}
			set
			{
				if ((this._totalCost != value))
				{
					this.OntotalCostChanging(value);
					this.SendPropertyChanging();
					this._totalCost = value;
					this.SendPropertyChanged("totalCost");
					this.OntotalCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_purchaseDate", DbType="Date NOT NULL")]
		public System.DateTime purchaseDate
		{
			get
			{
				return this._purchaseDate;
			}
			set
			{
				if ((this._purchaseDate != value))
				{
					this.OnpurchaseDateChanging(value);
					this.SendPropertyChanging();
					this._purchaseDate = value;
					this.SendPropertyChanged("purchaseDate");
					this.OnpurchaseDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_purchaseId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int purchaseId
		{
			get
			{
				return this._purchaseId;
			}
			set
			{
				if ((this._purchaseId != value))
				{
					this.OnpurchaseIdChanging(value);
					this.SendPropertyChanging();
					this._purchaseId = value;
					this.SendPropertyChanged("purchaseId");
					this.OnpurchaseIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_prodDescription", DbType="VarChar(45)")]
		public string prodDescription
		{
			get
			{
				return this._prodDescription;
			}
			set
			{
				if ((this._prodDescription != value))
				{
					this.OnprodDescriptionChanging(value);
					this.SendPropertyChanging();
					this._prodDescription = value;
					this.SendPropertyChanged("prodDescription");
					this.OnprodDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Store_AccountPurchase1", Storage="_Store", ThisKey="productID", OtherKey="productID", IsForeignKey=true)]
		public Store Store
		{
			get
			{
				return this._Store.Entity;
			}
			set
			{
				Store previousValue = this._Store.Entity;
				if (((previousValue != value) 
							|| (this._Store.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Store.Entity = null;
						previousValue.AccountPurchase1s.Remove(this);
					}
					this._Store.Entity = value;
					if ((value != null))
					{
						value.AccountPurchase1s.Add(this);
						this._productID = value.productID;
					}
					else
					{
						this._productID = default(int);
					}
					this.SendPropertyChanged("Store");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer1_AccountPurchase1", Storage="_Customer1", ThisKey="customerID", OtherKey="customerID", IsForeignKey=true)]
		public Customer1 Customer1
		{
			get
			{
				return this._Customer1.Entity;
			}
			set
			{
				Customer1 previousValue = this._Customer1.Entity;
				if (((previousValue != value) 
							|| (this._Customer1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customer1.Entity = null;
						previousValue.AccountPurchase1s.Remove(this);
					}
					this._Customer1.Entity = value;
					if ((value != null))
					{
						value.AccountPurchase1s.Add(this);
						this._customerID = value.customerID;
					}
					else
					{
						this._customerID = default(int);
					}
					this.SendPropertyChanged("Customer1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Customer")]
	public partial class Customer1 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _customerID;
		
		private string _customerName;
		
		private System.Nullable<decimal> _customerBalance;
		
		private string _username;
		
		private string _password;
		
		private System.Nullable<decimal> _credit;
		
		private EntitySet<AccountPurchase1> _AccountPurchase1s;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OncustomerIDChanging(int value);
    partial void OncustomerIDChanged();
    partial void OncustomerNameChanging(string value);
    partial void OncustomerNameChanged();
    partial void OncustomerBalanceChanging(System.Nullable<decimal> value);
    partial void OncustomerBalanceChanged();
    partial void OnusernameChanging(string value);
    partial void OnusernameChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void OncreditChanging(System.Nullable<decimal> value);
    partial void OncreditChanged();
    #endregion
		
		public Customer1()
		{
			this._AccountPurchase1s = new EntitySet<AccountPurchase1>(new Action<AccountPurchase1>(this.attach_AccountPurchase1s), new Action<AccountPurchase1>(this.detach_AccountPurchase1s));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customerID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int customerID
		{
			get
			{
				return this._customerID;
			}
			set
			{
				if ((this._customerID != value))
				{
					this.OncustomerIDChanging(value);
					this.SendPropertyChanging();
					this._customerID = value;
					this.SendPropertyChanged("customerID");
					this.OncustomerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customerName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string customerName
		{
			get
			{
				return this._customerName;
			}
			set
			{
				if ((this._customerName != value))
				{
					this.OncustomerNameChanging(value);
					this.SendPropertyChanging();
					this._customerName = value;
					this.SendPropertyChanged("customerName");
					this.OncustomerNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customerBalance", DbType="Decimal(5,2)")]
		public System.Nullable<decimal> customerBalance
		{
			get
			{
				return this._customerBalance;
			}
			set
			{
				if ((this._customerBalance != value))
				{
					this.OncustomerBalanceChanging(value);
					this.SendPropertyChanging();
					this._customerBalance = value;
					this.SendPropertyChanged("customerBalance");
					this.OncustomerBalanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="VarChar(45)")]
		public string username
		{
			get
			{
				return this._username;
			}
			set
			{
				if ((this._username != value))
				{
					this.OnusernameChanging(value);
					this.SendPropertyChanging();
					this._username = value;
					this.SendPropertyChanged("username");
					this.OnusernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="VarChar(10)")]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_credit", DbType="Decimal(5,2)")]
		public System.Nullable<decimal> credit
		{
			get
			{
				return this._credit;
			}
			set
			{
				if ((this._credit != value))
				{
					this.OncreditChanging(value);
					this.SendPropertyChanging();
					this._credit = value;
					this.SendPropertyChanged("credit");
					this.OncreditChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer1_AccountPurchase1", Storage="_AccountPurchase1s", ThisKey="customerID", OtherKey="customerID")]
		public EntitySet<AccountPurchase1> AccountPurchase1s
		{
			get
			{
				return this._AccountPurchase1s;
			}
			set
			{
				this._AccountPurchase1s.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AccountPurchase1s(AccountPurchase1 entity)
		{
			this.SendPropertyChanging();
			entity.Customer1 = this;
		}
		
		private void detach_AccountPurchase1s(AccountPurchase1 entity)
		{
			this.SendPropertyChanging();
			entity.Customer1 = null;
		}
	}
}
#pragma warning restore 1591
